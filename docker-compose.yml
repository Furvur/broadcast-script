services:
  app:
    image: ${DOCKER_IMAGE:-gitea.hostedapp.org/broadcast/broadcast:latest}
    platform: linux/${TARGETARCH:-amd64}
    pull_policy: always
    container_name: app
    restart: always
    env_file:
      - /opt/broadcast/app/.env
    volumes:
      - /opt/broadcast/app/storage:/rails/storage
      - /opt/broadcast/app/uploads:/rails/uploads
      - /opt/broadcast/app/triggers:/rails/triggers
      - /opt/broadcast/app/monitor:/rails/monitor
      - /opt/broadcast/ssl:/rails/ssl
    ports:
      - "80:80"
      - "443:443"
    networks:
      - broadcast-network
    depends_on:
      postgres:
        condition: service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
  job:
    image: ${DOCKER_IMAGE:-gitea.hostedapp.org/broadcast/broadcast:latest}
    platform: linux/${TARGETARCH:-amd64}
    pull_policy: always
    container_name: job
    restart: always
    env_file:
      - /opt/broadcast/app/.env
    volumes:
      - /opt/broadcast/app/storage:/rails/storage
    networks:
      - broadcast-network
    depends_on:
      postgres:
        condition: service_healthy
    command:
      - "bin/jobs"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
  postgres:
    image: postgres:17-alpine
    container_name: postgres
    restart: always
    env_file:
      - /opt/broadcast/db/.env
    volumes:
      - /opt/broadcast/db/backups:/backups
      - /opt/broadcast/db/postgres-data:/var/lib/postgresql/data
      - /opt/broadcast/db/init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "127.0.0.1:5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U broadcast"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    networks:
      - broadcast-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  broadcast-network:
    driver: bridge
